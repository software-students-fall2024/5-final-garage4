name: CI/CD Pipeline for Machine Learning Client

on:
  push:
    branches: [main, master]
    paths:
      - 'machine-learning-client/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'machine-learning-client/**'
      - '.github/workflows/**'

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/ml-client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./machine-learning-client
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install spaCy model
        working-directory: ./machine-learning-client
        run: |
          python -m spacy download en_core_web_sm

      - name: Install NLTK data
        working-directory: ./machine-learning-client
        run: |
          python -m nltk.downloader punkt stopwords wordnet vader_lexicon
        env:
          NLTK_DATA: /home/runner/nltk_data

      - name: Run Tests with Coverage
        working-directory: ./machine-learning-client
        run: |
          pytest --cov=app --cov-fail-under=80 --cov-report=xml

      - name: Build Docker image
        working-directory: ./machine-learning-client
        run: |
          docker build -t $IMAGE_NAME:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push $IMAGE_NAME:latest

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd 5-final-garage4
            docker compose pull
            docker compose up -d

